 1    # 讀取 ppg_classification
 2    from tensorflow.keras import layers
 3    from tensorflow.keras.models import Sequential
 4    import keras_lite_convertor as kc
 5     
 6    path = 'ppg_classification'
 7     
 8    Data_reader = kc.Data_reader(
 9        path,
10        mode='binary',       # binary 適用於二元分類
11        label_name=['others', 'ppg'])   # 標籤名稱
12    data, label = Data_reader.read()
13     
14    # 資料預處理
15    # 取資料中的 80% 當作訓練集
16    split_num = int(len(data)*0.8)
17    train_data = data[:split_num]
18    train_label = label[:split_num]
19     
20    # 正規化
21    mean = train_data.mean()  # 平均數
22    data -= mean
23    std = train_data.std()   # 標準差
24    data /= std
25     
26    # 驗證集
27    validation_data = data[split_num:-5]
28    validation_label = label[split_num:-5]
29     
30    # 測試集
31    test_data = data[-5:]
32    test_label = label[-5:]
33     
34    # 建立神經網路架構
35     
36    model = Sequential()
37    model.add(layers.Reshape((300, 1), input_shape=(300,)))
38    model.add(layers.Conv1D(4, 3, activation='relu',
39                            padding='valid'))       # 卷積層
40    model.add(layers.MaxPooling1D())                # 池化層
41    model.add(layers.Conv1D(4, 3, activation='relu',
42                            padding='valid'))
43    model.add(layers.MaxPooling1D())
44    model.add(layers.Conv1D(8, 3, activation='relu',
45                            padding='valid'))
46    model.add(layers.MaxPooling1D())
47    model.add(layers.Flatten())   # 展平層
48    model.add(layers.Dense(
49        1, activation='sigmoid'))  # 輸出層的啟動函數為 sigmoid
50     
51    # 編譯及訓練模型
52    model.compile(
53        optimizer='adam',
54        loss='binary_crossentropy',
55        metrics=['accuracy'])
56     
57    train_history = model.fit(
58        train_data, train_label,    # 訓練集
59        validation_data=(           # 驗證集
60            validation_data, validation_label), 
61        epochs=200)                 # 訓練週期為200
62     
63    # 測試模型
64    print('prediction:')
65    print(model.predict(test_data))
66    print()
67    print('groundtruth:')
68    print(test_label)