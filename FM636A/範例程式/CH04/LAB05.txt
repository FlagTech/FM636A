 1    from machine import SoftI2C, Pin
 2    from max30102 import MAX30102
 3    from utime import ticks_ms, ticks_diff
 4    from pulse_oximeter import Pulse_oximeter
 5    import network, ESPWebServer
 6    
 7    
 8    my_SCL_pin = 25         # I2C SCL 腳位
 9    my_SDA_pin = 26         # I2C SDA 腳位
10    
11    i2c = SoftI2C(sda=Pin(my_SDA_pin),
12                  scl=Pin(my_SCL_pin))
13    
14    sensor = MAX30102(i2c=i2c)
15    sensor.setup_sensor()
16    
17    pox = Pulse_oximeter(sensor)   # 使用血氧濃度計算類別
18    
19    spo2 = 0
20    
21    def handleCmd(socket, args):   # 處理 /handleCmd 指令的函式
22        ESPWebServer.ok(socket, "200", str(spo2))
23    
24    print("連接中...")
25    sta = network.WLAN(network.STA_IF)
26    sta.active(True)
27    sta.connect("無線網路名稱", "無線網路密碼")
28    
29    while not sta.isconnected():
30        pass
31    
32    print("已連接, ip為:", sta.ifconfig()[0])
33    
34    ESPWebServer.begin(80)                     # 啟用網站
35    ESPWebServer.onPath("/measure", handleCmd) # 指定處理指令的函式
36    ESPWebServer.setDocPath("/")               # 指定 HTML 檔路徑
37    
38    while (True):
39        ESPWebServer.handleClient()
40        
41        pox.update()
42     
43        spo2 = pox.get_spo2()
44        
45        if spo2 > 0:
46            print("SpO2:", spo2, "%")
